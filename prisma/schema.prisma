// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id      Int      @id @default(autoincrement())
  sid     String   @unique
  session String
  expires DateTime
}

model User {
  id               Int              @id @default(autoincrement())
  firstname        String
  lastname         String
  username         String           @unique
  email            String           @unique
  password         String
  role             Role             @default(STUDENT)
  profile_info     String?
  refreshToken     String[]         @unique
  verified         Boolean
  created_at       DateTime         @default(now())
  updated_at       DateTime         @updatedAt
  enrollments      Enrollment[]
  submissions      Submission[]
  quiz_attempts    QuizAttempt[]
  discussion_posts DiscussionPost[]
}

model Course {
  id             Int            @id @default(autoincrement())
  title          String         @unique
  description    String?
  instructor_id  Int
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt
  course_modules CourseModule[]
  enrollments    Enrollment[]
  assignments    Assignment[]
  quizzes        Quiz[]
  discussions    Discussion[]
}

model CourseModule {
  id        Int     @id @default(autoincrement())
  title     String  @unique
  content   String?
  order     Int
  course    Course  @relation(fields: [course_id], references: [id])
  course_id Int
}

model Enrollment {
  id          Int      @id @default(autoincrement())
  enrolled_at DateTime @default(now())
  user        User     @relation(fields: [user_id], references: [id])
  course      Course   @relation(fields: [course_id], references: [id])
  user_id     Int
  course_id   Int
}

model Assignment {
  id          Int          @id @default(autoincrement())
  title       String
  description String?
  due_date    DateTime
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
  course      Course       @relation(fields: [course_id], references: [id])
  course_id   Int
  submissions Submission[]
}

model Submission {
  id            Int        @id @default(autoincrement())
  submission    String?
  submitted_at  DateTime
  created_at    DateTime   @updatedAt
  updated_at    DateTime   @default(now())
  assignment    Assignment @relation(fields: [assignment_id], references: [id])
  user          User       @relation(fields: [user_id], references: [id])
  assignment_id Int
  user_id       Int
}

model Quiz {
  id             Int            @id @default(autoincrement())
  title          String
  description    String?
  due_date       DateTime
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt
  course         Course         @relation(fields: [course_id], references: [id])
  course_id      Int
  quiz_questions QuizQuestion[]
  quiz_attempts  QuizAttempt[]
}

model QuizQuestion {
  id            Int          @id @default(autoincrement())
  question_text String
  question_type QuestionType @default(CHECKBOXES)
  quiz          Quiz         @relation(fields: [quiz_id], references: [id])
  quiz_id       Int
  quiz_options  QuizOption[]
}

model QuizOption {
  id          Int          @id @default(autoincrement())
  option_text String
  is_correct  Boolean
  question    QuizQuestion @relation(fields: [question_id], references: [id])
  question_id Int
}

model QuizAttempt {
  id              Int      @id @default(autoincrement())
  submission_time DateTime
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  score           Float
  quiz            Quiz     @relation(fields: [quiz_id], references: [id])
  user            User     @relation(fields: [user_id], references: [id])
  quiz_id         Int
  user_id         Int
}

model Discussion {
  id               Int              @id @default(autoincrement())
  title            String
  description      String?
  created_at       DateTime         @default(now())
  updated_at       DateTime         @updatedAt
  course           Course           @relation(fields: [course_id], references: [id])
  course_id        Int
  discussion_posts DiscussionPost[]
}

model DiscussionPost {
  id            Int        @id @default(autoincrement())
  post_text     String
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt
  discussion    Discussion @relation(fields: [discussion_id], references: [id])
  user          User       @relation(fields: [user_id], references: [id])
  discussion_id Int
  user_id       Int
}

enum Role {
  STUDENT
  ADMIN
}

enum QuestionType {
  CHECKBOXES
  RADIO
}
